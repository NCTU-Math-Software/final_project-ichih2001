function check_zero
% Project 5:任意給定平面上三點, 判斷原點是否在這三點所圍成的三角形內.
% input:在螢幕上點相異三點
% output:原點是否在三點形成的三角形內
% (若三點共線，則判斷原點是否在線上)

axis([-1,1,-1,1]) % 開一個[-1,1]*[-1,1]的視窗
hold on
plot(0,0,'o') % 標註原點(0,0)
[x,y]=ginput(3); % 使用者輸入三個點
plot(x,y,'o') % 標註使用者輸入的三個點

% 畫連接3點的線段
plot([x(1),x(2)],[y(1),y(2)],[x(2),x(3)],[y(2),y(3)],[x(1),x(3)],[y(1),y(3)])
hold on
%-----------------------------------------------------------------------------

if((x(1)==x(2))&(x(2)==x(3))&(x(1)==0))
    % 三點共鉛直線通過(0,0)
    m=0;
    n=0;
    l=0;
elseif((x(1)==x(2))&(x(2)==x(3))&(x(1)~=0))
    % 三點共鉛直線不通過(0,0)
    m=0;
    n=0;
    l=0;
elseif(x(1)==x(2))
    % 第1點和第2點x座標相同，需另外定義 m
    % 若第3點和原點同側則 m>0,反之 m<0
    
    if(x(1)>=0)&(x(3)<x(1))|(x(1)<=0)&(x(3)>x(1))
        m=2;
        n=(((y(3)-y(2))/(x(3)-x(2)))*(x(1)-x(2))+y(2)-y(1))*(((y(3)-y(2))/(x(3)-x(2)))*(-x(2))+y(2));
        l=(((y(1)-y(3))/(x(1)-x(3)))*(x(2)-x(3))+y(3)-y(2))*(((y(1)-y(3))/(x(1)-x(3)))*(-x(3))+y(3));
    else
        m=-2;
        n=(((y(3)-y(2))/(x(3)-x(2)))*(x(1)-x(2))+y(2)-y(1))*(((y(3)-y(2))/(x(3)-x(2)))*(-x(2))+y(2));
        l=(((y(1)-y(3))/(x(1)-x(3)))*(x(2)-x(3))+y(3)-y(2))*(((y(1)-y(3))/(x(1)-x(3)))*(-x(3))+y(3));
    end
elseif(x(2)==x(3))
    % 第2點和第3點x座標相同，需另外定義 n
    % 若第1點和原點同側則 n>0,反之 n<0
    
    if(x(2)>=0)&(x(1)<x(2))|(x(2)<=0)&(x(1)>x(2))
        n=2;
        m=(((y(2)-y(1))/(x(2)-x(1)))*(x(3)-x(1))+y(1)-y(3))*(((y(2)-y(1))/(x(2)-x(1)))*(-x(1))+y(1));
        l=(((y(1)-y(3))/(x(1)-x(3)))*(x(2)-x(3))+y(3)-y(2))*(((y(1)-y(3))/(x(1)-x(3)))*(-x(3))+y(3));
    else
        n=-2;
        m=(((y(2)-y(1))/(x(2)-x(1)))*(x(3)-x(1))+y(1)-y(3))*(((y(2)-y(1))/(x(2)-x(1)))*(-x(1))+y(1));
        l=(((y(1)-y(3))/(x(1)-x(3)))*(x(2)-x(3))+y(3)-y(2))*(((y(1)-y(3))/(x(1)-x(3)))*(-x(3))+y(3));
    end
elseif(x(1)==x(3))
    % 第1點和第3點x座標相同，需另外定義 l
    % 若第2點和原點同側則 l>0,反之l<0
    
    if(x(1)>=0)&(x(2)<x(1))|(x(1)<=0)&(x(2)>x(1))
        l=2;
        m=(((y(2)-y(1))/(x(2)-x(1)))*(x(3)-x(1))+y(1)-y(3))*(((y(2)-y(1))/(x(2)-x(1)))*(-x(1))+y(1));
        n=(((y(3)-y(2))/(x(3)-x(2)))*(x(1)-x(2))+y(2)-y(1))*(((y(3)-y(2))/(x(3)-x(2)))*(-x(2))+y(2));
    else
        l=-2;
        m=(((y(2)-y(1))/(x(2)-x(1)))*(x(3)-x(1))+y(1)-y(3))*(((y(2)-y(1))/(x(2)-x(1)))*(-x(1))+y(1));
        n=(((y(3)-y(2))/(x(3)-x(2)))*(x(1)-x(2))+y(2)-y(1))*(((y(3)-y(2))/(x(3)-x(2)))*(-x(2))+y(2));
    end
else    
    m=(((y(2)-y(1))/(x(2)-x(1)))*(x(3)-x(1))+y(1)-y(3))*(((y(2)-y(1))/(x(2)-x(1)))*(-x(1))+y(1));
    n=(((y(3)-y(2))/(x(3)-x(2)))*(x(1)-x(2))+y(2)-y(1))*(((y(3)-y(2))/(x(3)-x(2)))*(-x(2))+y(2));
    l=(((y(1)-y(3))/(x(1)-x(3)))*(x(2)-x(3))+y(3)-y(2))*(((y(1)-y(3))/(x(1)-x(3)))*(-x(3))+y(3));
end
%------------------------------------------------------------------------------------------------

if (m>=0)&(n>=0)&(l>=0) % 均大於0表示對三條線來說均同側
        if (m==0)&(n==0)&(l==0) %三點共線時考慮原點是否在線上
            if (((y(1)==y(2))&(y(2)==y(3))&(y(1)==0)&(max(x)>=0)&(min(x)<=0)))
                % 三點共水平線通過(0,0)
                disp('The original point is on the line.')
            elseif(x(1)==0)&(max(y)>=0)&(min(y)<=0)
                % 三點共鉛直線通過(0,0)
                disp('The original point is on the line.')
            elseif ((y(2)-y(1))/(x(2)-x(1))==(y(3)-y(2))/(x(3)-x(2)))&((y(3)-y(1))*(-x(3))/(x(3)-x(1))+y(3)==0)&(max(x)>=0)&(min(x)<=0)
                % 三點共線
                disp('The original point is on the line.')
            else
                disp('The original point is "not" on the line.')
            end
        else
            disp('The original point is in the triangle.')
        end
else
    % 未同時滿足不等式，則原點不在三角形內
    disp('The original point is "not" in the triangle.')
end

end